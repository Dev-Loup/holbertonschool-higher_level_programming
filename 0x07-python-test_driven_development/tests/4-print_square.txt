=========================================
Test Document for module 4-print_square.py
=========================================

This module checks the module behaviour in specific situations.
Syntaxis:
    ``print_square(size)``

=========================================
1. Function: ``print_square`` test cases
=========================================

This function prints a square.

1.1. Import function Testing
    >>> print_square = __import__("4-print_square").print_square

1.2. Argument missing Testing
    1.2.1. No Size given
        >>> print_square()
        Traceback (most recent call last):
        TypeError: print_square() missing 1 required positional argument: 'size'

    1.2.2 More than one Size given
        >>> print_square(1, 2)
        Traceback (most recent call last):
        TypeError: print_square() takes 1 positional argument but 2 were given

1.3. Argument invalid input
    1.3.1. Size is None
        >>> print_square(None)
        Traceback (most recent call last):
        TypeError: size must be an integer

    1.3.2 Size is Float
        >>> print_square(10.5)
        Traceback (most recent call last):
        TypeError: size must be an integer
    
    1.3.3 Size is list
        >>> print_square([])
        Traceback (most recent call last):
        TypeError: size must be an integer

    1.3.4 Size is boolean
        >>> print_square(True)
        Traceback (most recent call last):
        TypeError: size must be an integer

    1.3.5 Argument size is Boolean
        >>> print_square(True)
        Traceback (most recent call last):
        TypeError: size must be an integer

    1.3.6 Size is dictionary
        >>> print_square({'size': 2})
        Traceback (most recent call last):
        TypeError: size must be an integer

    1.3.7 Size is Set
        >>> print_square(set())
        Traceback (most recent call last):
        TypeError: size must be an integer

    1.3.8 Size is tuple
        >>> print_square(())
        Traceback (most recent call last):
        TypeError: size must be an integer

1.4 Results Testing
    1.4.1 Size is zero
        >>> print_square(0)
            
    1.4.2 size is negative
        >>> print_square(-4)
        Traceback (most recent call last):
        ValueError: size must be >= 0

    1.4.3 size is postive
        >>> print_square(2)
        ##
        ##

